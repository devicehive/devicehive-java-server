<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.devicehive</groupId>
    <artifactId>devicehive-server</artifactId>
    <packaging>pom</packaging>
    <version>3.4.0-SNAPSHOT</version>
    <name>DeviceHive Java Server</name>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <properties>
        <license.licenseName>apache_v2</license.licenseName>
        <license.organizationName>DataArt</license.organizationName>
        <license.inceptionYear>2016</license.inceptionYear>

        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <slf4j.version>1.7.5</slf4j.version>
        <logback.version>1.1.3</logback.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <springboot.version>1.5.7.RELEASE</springboot.version>
        <jersey.version>2.26</jersey.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <hsqldb.version>2.3.2</hsqldb.version>
        <postgresql.version>9.4-1201-jdbc4</postgresql.version>
        <springloaded.version>1.2.3.RELEASE</springloaded.version>
        <httpclient.version>4.5.3</httpclient.version>
        <zookeeper.version>3.4.6</zookeeper.version>
        <zkclient.version>0.8</zkclient.version>
        <nekohtml.version>1.9.22</nekohtml.version>
        <hazelcast.version>3.8.1</hazelcast.version>
        <hazelcast-hibernate5.version>1.2.2</hazelcast-hibernate5.version>
        <curator.version>2.8.0</curator.version>
        <flyway-core.version>3.2.1</flyway-core.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <commons-net.version>3.3</commons-net.version>
        <commons-codec.version>1.9</commons-codec.version>
        <guava.version>23.0</guava.version>
        <gson.version>2.7</gson.version>
        <joda-time.version>2.5</joda-time.version>
        <jquery.version>1.11.1</jquery.version>
        <kafka.version>0.10.0.1</kafka.version>
        <springframework.version>4.3.11.RELEASE</springframework.version>
        <jackson2.version>2.8.4</jackson2.version>
        <hibernate-version>5.2.11.Final</hibernate-version>
        <swagger.version>1.5.4</swagger.version>
        <lmax-disruptor.version>3.3.6</lmax-disruptor.version>
        <javax.el.version>2.2.4</javax.el.version>
        <javax.websocket.version>1.1</javax.websocket.version>

        <scala-binaries.version>2.10</scala-binaries.version>

        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
        <maven-enforcer-plugin.version>1.4</maven-enforcer-plugin.version>
        <docker-maven-plugin.version>0.2.9</docker-maven-plugin.version>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <download-maven-plugin.version>1.3.0</download-maven-plugin.version>
        <maven-resource-plugin.version>2.7</maven-resource-plugin.version>
        <jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
        <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
        <maven-assembly-plugin.version>3.0.0</maven-assembly-plugin.version>

        <tomcat.version>8.0.21</tomcat.version>

        <jjwt.version>0.7.0</jjwt.version>

        <skipTests>true</skipTests>
        <packaging.type>jar</packaging.type>

        <server.log.directory>${project.build.directory}/logs</server.log.directory>
        <project.rootdir>${project.basedir}</project.rootdir>
    </properties>

    <modules>
        <module>devicehive-common</module>
        <module>devicehive-common-dao</module>
        <module>devicehive-rdbms-dao</module>
        <module>devicehive-riak-dao</module>
        <module>devicehive-shim-api</module>
        <module>devicehive-shim-kafka-impl</module>
        <module>devicehive-proxy-api</module>
        <module>devicehive-proxy-ws-kafka-impl</module>
        <module>devicehive-backend</module>
        <module>devicehive-frontend</module>
        <module>devicehive-test-utils</module>
        <module>devicehive-auth</module>
        <module>devicehive-common-auth</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala-binaries.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>jmxri</artifactId>
                        <groupId>com.sun.jmx</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jms</artifactId>
                        <groupId>javax.jms</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jmxtools</artifactId>
                        <groupId>com.sun.jdmk</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-base</artifactId>
                <version>${jackson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jersey</artifactId>
                <version>${springboot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-websocket</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-client</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-spring</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-hibernate52</artifactId>
                <version>${hazelcast-hibernate5.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${lmax-disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <!--<finalName>devicehive-${project.version}</finalName>-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>reserve-ports</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>server.test.port</portName>
                                <portName>kafka.test.port</portName>
                                <portName>zk.test.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>log4j:log4j</exclude>
                                        <exclude>org.slf4j:slf4j-log4j12</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.10</version>
                <configuration>
                    <licenseFile>${project.basedir}/LICENSE</licenseFile>
                    <excludedGroups>com\.devicehive.*</excludedGroups>
                    <useMissingFile>true</useMissingFile>
                    <missingFile>${project.basedir}/missing-license.properties</missingFile>
                    <useJavaNoReformatCommentStartTag>false</useJavaNoReformatCommentStartTag>
                    <failIfWarning>true</failIfWarning>
                    <failOnMissingHeader>true</failOnMissingHeader>
                    <outputDirectory>${project.rootdir}/target/license</outputDirectory>
                    <thirdPartyFilename>${project.artifactId}_THIRD-PARTY.txt</thirdPartyFilename>
                    <verbose>false</verbose>
                    <!-- These dependencies are ignored because they don't have licence information inside artifact-->
                    <licenseMerges>
                        <licenseMerge>Apache 2.0|Apache License, Version 2.0|The Apache Software License, Version 2.0|Apache License 2.0|Apache 2|Apache License, version 2.0|AL 2.0|Apache License Version 2.0|Apache Software Licenses</licenseMerge>
                        <licenseMerge>MIT|MIT License|The MIT License</licenseMerge>
                        <licenseMerge>LGPL 2.1|GNU Lesser General Public License|GNU Lesser Public License|GNU Lesser General Public License, Version 2.1</licenseMerge>
                        <licenseMerge>EPL 1.0|Eclipse Public License - v 1.0|Eclipse Public License (EPL), Version 1.0|Eclipse Public License 1.0</licenseMerge>
                        <licenseMerge>EDL 1.0|Eclipse Distribution License (EDL), Version 1.0</licenseMerge>
                        <licenseMerge>BSD|BSD License|The BSD License|HSQLDB License, a BSD open source license</licenseMerge>
                        <licenseMerge>CPL 1.0|Common Public License Version 1.0</licenseMerge>
                        <licenseMerge>New BSD License|The New BSD License</licenseMerge>
                        <licenseMerge>CDDL+GPLv2 CPE|CDDL + GPLv2 CPE|CDDL + GPLv2 with classpath exception|CDDL or GPLv2 with exceptions</licenseMerge>
                        <licenseMerge>CDDL 1.0|Common Development and Distribution License</licenseMerge>
                        <licenseMerge>GPLv2 CPE|GPL2 w/ CPE|GPLv2 with classpath exception|GNU General Public License, Version 2 with the Classpath Exception</licenseMerge>
                        <licenseMerge>BSD style|BSD-like</licenseMerge>
                    </licenseMerges>
                    <!-- White List of Licenses-->
                    <includedLicenses>
                        <includedLicense>Apache 2.0</includedLicense>
                        <includedLicense>MIT</includedLicense>
                        <includedLicense>LGPL 2.1</includedLicense>
                        <includedLicense>Public Domain</includedLicense>
                        <includedLicense>CDDL+GPL License</includedLicense>
                        <includedLicense>CDDL+GPLv2 CPE</includedLicense>
                        <includedLicense>EPL 1.0</includedLicense>
                        <includedLicense>GPLv2 CPE</includedLicense>
                        <includedLicense>CDDL 1.0</includedLicense>
                        <includedLicense>CDDL 1.1</includedLicense>
                        <includedLicense>The SAX License</includedLicense>
                        <includedLicense>The W3C License</includedLicense>
                        <includedLicense>The PostgreSQL License</includedLicense>
                        <includedLicense>BSD style</includedLicense>
                        <includedLicense>BSD</includedLicense>
                        <includedLicense>New BSD License</includedLicense>
                        <includedLicense>MPL 1.1</includedLicense>
                        <includedLicense>WTFPL</includedLicense>
                        <includedLicense>EDL 1.0</includedLicense>
                        <includedLicense>CPL 1.0</includedLicense>
                    </includedLicenses>
                </configuration>
                <executions>
                    <!-- This execution aimed to update file headers -->
                    <execution>
                        <id>update-file-headers</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <warName>${project.build.finalName}</warName>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <configuration>
                        <imageName>${project.build.finalName}/${project.build.finalName}-boot</imageName>
                        <dockerDirectory>docker</dockerDirectory>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}-boot.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>${cobertura-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>test-port-override</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <argLine>
                                -Dport=${server.test.port} -Dzk.port=${zk.test.port}
                                -Dkafka.port=${kafka.test.port}
                            </argLine>
                            <excludes>
                                <exclude>**/*Defect157CommandTest.java</exclude>
                                <exclude>**/*Defect157NotificationTest.java</exclude>
                                <exclude>**/*DeviceNotificationServiceTest.java</exclude>
                                <exclude>**/*DeviceCommandServiceTest.java</exclude>
                                <exclude>**/*NetworkServiceTest.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jacoco.coverage</id>
            <activation>
                <property>
                    <name>checkCoverage</name>
                </property>
            </activation>
            <properties>
                <bundle-coverage-ratio>0.80</bundle-coverage-ratio>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <configuration>
                            <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
                            <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
                            <excludes>
                                <exclude>**/model/**/*.*</exclude>
                                <exclude>**/mapper/*.*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jacoco-initialize</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${bundle-coverage-ratio}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
